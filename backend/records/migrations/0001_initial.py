# Generated by Django 5.1 on 2025-04-24 21:37

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('appointments', '0003_appointment_tenant'),
        ('patients', '0004_alter_patient_profile_picture'),
        ('tooth', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ProcedureCategory',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100, unique=True)),
                ('description', models.TextField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'Procedure Category',
                'verbose_name_plural': 'Procedure Categories',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='ProcedureType',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(help_text="Name of the procedure type (e.g., 'Composite Filling - 1 Surface', 'Regular Checkup').", max_length=200, unique=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('internal_code', models.CharField(blank=True, help_text='Practice-specific code for this procedure type.', max_length=50, null=True)),
                ('standard_code', models.CharField(blank=True, db_index=True, help_text='Standardized code (e.g., CDT, CPT) if applicable.', max_length=50, null=True)),
                ('default_price', models.DecimalField(decimal_places=2, default=0.0, help_text='Default price for this procedure type. Actual price may vary per instance.', max_digits=10)),
                ('default_duration', models.DurationField(blank=True, help_text='Estimated default duration for scheduling purposes (e.g., 0:30:00 for 30 mins).', null=True)),
                ('requires_tooth', models.BooleanField(default=True, help_text='Does this procedure typically apply to a specific tooth?')),
                ('requires_surface', models.BooleanField(default=False, help_text='Does this procedure typically involve specific tooth surfaces (e.g., fillings)?')),
                ('is_active', models.BooleanField(db_index=True, default=True, help_text='Is this procedure type currently offered by the practice?')),
                ('category', models.ForeignKey(blank=True, help_text='Optional category for organization.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='procedure_types', to='records.procedurecategory')),
            ],
            options={
                'verbose_name': 'Procedure Type',
                'verbose_name_plural': 'Procedure Types',
                'ordering': ['category__name', 'name'],
            },
        ),
        migrations.CreateModel(
            name='Procedure',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('tooth_surfaces', models.CharField(blank=True, help_text='Comma-separated list of tooth surfaces involved (e.g., M,O,D,B,L,I).', max_length=50, null=True)),
                ('status', models.CharField(choices=[('PL', 'Planned'), ('SC', 'Scheduled'), ('IP', 'In Progress'), ('CO', 'Completed'), ('CA', 'Cancelled'), ('OH', 'On Hold')], db_index=True, default='PL', help_text='Current status of the procedure.', max_length=2)),
                ('procedure_date', models.DateTimeField(db_index=True, help_text='Date and time the procedure is planned, scheduled, or was completed.')),
                ('completion_date', models.DateTimeField(blank=True, help_text='Date and time the procedure was marked as completed.', null=True)),
                ('price', models.DecimalField(decimal_places=2, help_text='Actual price charged for this specific procedure instance.', max_digits=10)),
                ('notes', models.TextField(blank=True, help_text='Clinical or administrative notes specific to this procedure instance.', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('appointment', models.ForeignKey(blank=True, help_text='The appointment during which this procedure is scheduled or was performed.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='procedures', to='appointments.appointment')),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='procedures', to='patients.patient')),
                ('provider', models.ForeignKey(blank=True, help_text='The provider who performed or is scheduled to perform the procedure.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='performed_procedures', to=settings.AUTH_USER_MODEL)),
                ('tooth', models.ForeignKey(blank=True, help_text='Specific tooth this procedure applies to, if any.', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='procedures', to='tooth.tooth')),
                ('procedure_type', models.ForeignKey(help_text='The type of procedure performed or planned.', on_delete=django.db.models.deletion.PROTECT, related_name='instances', to='records.proceduretype')),
            ],
            options={
                'verbose_name': 'Procedure',
                'verbose_name_plural': 'Procedures',
                'ordering': ['-procedure_date', '-created_at'],
                'indexes': [models.Index(fields=['patient', 'status'], name='records_pro_patient_c91a99_idx'), models.Index(fields=['appointment'], name='records_pro_appoint_8b3e89_idx'), models.Index(fields=['procedure_type', 'status'], name='records_pro_procedu_5d3baf_idx')],
            },
        ),
    ]
